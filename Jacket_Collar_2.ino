#include <Adafruit_NeoPixel.h>

#define PIN 12
Adafruit_NeoPixel strip = Adafruit_NeoPixel(112, PIN, NEO_GRB + NEO_KHZ800);

//animation speed
uint8_t  wait = 10;

const int nFrames = 3; //number of frames
const int height = 4;  //height of frame
const int width = 28;   //width of frame
const int refreshesPerFrame = 5; //number of flicker cycles per animation frame


void setup() {
  
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'
  
}

void loop() {
  
    uint8_t R1 = (random(13,20));
    uint8_t R2 = (random(13,20));
    uint8_t R3 = (random(13,20));
    uint8_t R4 = (random(13,20));


    
uint8_t anim[nFrames][height][width][3] =
    {  //whole data object
      
     { //first frame
      {{R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {4*R1,20,00}, {4*R1,20,00}, {4*R1,20,00}, {4*R1,20,00}, {4*R1,20,00}, {4*R1,20,00}, {4*R1,20,00}, {4*R1,20,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}}, //fourth row
      {{R3,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {4*R2,20,00}, {4*R2,20,00}, {4*R2,20,00}, {4*R2,20,00}, {4*R2,20,00}, {4*R2,20,00}, {4*R2,20,00}, {4*R2,20,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}}, //third row
      {{R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {4*R3,20,00}, {4*R3,20,00}, {4*R3,20,00}, {4*R3,20,00}, {4*R3,20,00}, {4*R3,20,00}, {4*R3,20,00}, {4*R3,20,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}}, //second row
      {{R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {4*R4,20,00}, {4*R4,20,00}, {4*R4,20,00}, {4*R4,20,00}, {4*R4,20,00}, {4*R4,20,00}, {4*R4,20,00}, {4*R4,20,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}}  //first row
     },
     
     { //second frame
      {{R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,50,00}, {R1,50,00}, {R1,50,00}, {R1,50,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}}, //fourth row
      {{R3,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,50,00}, {R2,50,00}, {R2,50,00}, {R2,50,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}}, //third row
      {{R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,50,00}, {R3,50,00}, {R3,50,00}, {R3,50,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}}, //second row
      {{R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,50,00}, {R4,50,00}, {R4,50,00}, {R4,50,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}}  //first row
     },
     
     { //third frame
      {{R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}, {R1,00,00}}, //fourth row
      {{R3,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}, {R2,00,00}}, //third row
      {{R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}, {R3,00,00}}, //second row
      {{R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}, {R4,00,00}}  //first row
     }
    };


    
    uint8_t* pixel;  //a variable to point to a pixel in the animation
 
    for(int frame=0; frame<nFrames; frame++){ //loop through the frames
      for(int ref=0; ref<refreshesPerFrame; ref++){
        for(int row = 0; row<height; row++){  //row by row
          for(int col=0; col<width; col++){ //one pixel at a time
            //select the pixel
            pixel = anim[frame][row][col]; 
              
            // split the channels
            int red = pixel[0]; 
            int green = pixel[1];
            int blue = pixel[2];
              
            //red = red + random(0,20); //inject some noise on the red channel
              
            //figure out which led on the strip
            int ledPos = col + (row*(width));
                   
            //set the colour
            strip.setPixelColor(
              ledPos,
              red,
              green,
              blue
            );
            
          }//row complete
        }//refresh complete
        delay(wait);   //10fps maybe
        strip.show();
      }//frame complete
    }//animation complete
  
}
